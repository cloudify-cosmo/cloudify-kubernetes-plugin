version: 2

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

jobs:

  unittests:
    machine:
      enabled: true
      python:
        version: pypy-2.2.1
    steps:
      - checkout
      - run:
          name: Upgrade pip
          command: pip install --upgrade pip==9.0.1
      - run:
          name: install tox
          command: pip install tox
      - run: tox -e pep8
      - run: tox -e py27

  wagon:
    docker:
      - image: amd64/centos:centos7.3.1611
    steps:
      - checkout
      - run:
          name: Install epel
          command: yum install -y epel-release
      - run:
          name: Install python dependencies
          command: yum -y install python-pip python-setuptools python-pip python-wheel python-setuptools python-virtualenv
      - run:
          name: Install devel dependencies
          command: yum -y install python-devel gcc-c++ gcc zlib-devel libffi-devel openssl-devel
      - run:
          name: Upgrade pip
          command: pip install --upgrade pip==9.0.1
      - run:
          name: Init virtualenv
          command: virtualenv env
      - run:
          name: Install wagon
          command: pip install wagon==0.3.2
      - run:
          name: many_linux
          command: echo "manylinux1_compatible = False" > "env/bin/_manylinux.py"
      - run:
          name: make workspace
          command: mkdir -p workspace/build
      - run:
          name: Create wagon
          command: source env/bin/activate && wagon create -s . -v -o workspace/build -f -a '--no-cache-dir -c constraints.txt'
      - persist_to_workspace:
          root: workspace
          paths:
            - build/*

  cloudify-manager:
    docker:
      - image: amd64/centos:centos7.3.1611
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Install dependencies
          command: yum -y install python-devel gcc openssl git libxslt-devel libxml2-devel openldap-devel libffi-devel openssl-devel libvirt-devel
      - run:
          name: Download pip
          command: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
      - run:
          name: Install pip
          command: python get-pip.py
      - run:
          name: Upgrade pip
          command: pip install --upgrade pip==9.0.1
      - run:
          name: Install virtualenv
          command: pip install virtualenv
      - run:
          name: Init virtualenv
          command: virtualenv env
      - run:
          name: install cloudify
          command: pip install cloudify==4.3.2
      - run:
          name: install test requirements
          command: pip install nose https://github.com/cloudify-cosmo/cloudify-gcp-plugin/archive/1.4.3.zip https://github.com/cloudify-cosmo/cloudify-fabric-plugin/archive/1.5.1.zip https://github.com/cloudify-incubator/cloudify-utilities-plugin/archive/1.7.1.zip https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/2.1.1.zip
      - run:
          name: test 4.3.2
          command: nosetests -s tests/test_kubernetes.py



  release:
    docker:
      - image: circleci/python:2.7.15-stretch
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: Download pip
          command: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
      - run:
          name: Install pip
          command: sudo python get-pip.py
      - run:
          name: Install virtualenv
          command: pip install --user virtualenv
      - run:
          name: Init virtualenv
          command: virtualenv env
      - run:
          name: install tox
          command: pip install --user pygithub pyyaml==3.10
      - run:
          name: upgrade setuptools
          command: pip install --upgrade setuptools
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/2.2.0.zip
      - run: python .circleci/package_release.py

workflows:
  version: 2
  tests:
    jobs:
      - unittests
      - release:
          context: ecosystem
      - wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - cloudify-manager:
          context: ecosystem
          requires:
            - wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
