plugins:
  kubernetes:
    executor: central_deployment_agent
    package_name: cloudify-kubernetes-plugin
    package_version: '1.1.0'
    source: https://github.com/cloudify-incubator/cloudify-kubernetes-plugin/archive/1.1.0.zip

data_types:
  cloudify.kubernetes.types.ApiOptions:
    properties:
      host:
        type: string
        required: false
        description: >
          HTTP/HTTPS URL to Kubernetes API

      ssl_ca_cert:
        type: string
        required: false

      cert_file:
        type: string
        required: false

      key_file:
        type: string
        required: false

      verify_ssl:
        type: string
        required: false

  cloudify.kubernetes.types.ConfigurationVariant:
    description: >
      Type representing all Kubernetes API configuration variants.
      Each property represents separate supported variant of configuration.
      You should choose one variant and fill in only on property.
    properties:
      blueprint_file_name:
        type: string
        required: false
        description: >
          Name of Kubernetes configuration file attached to blueprint

      manager_file_path:
        type: string
        required: false
        description: >
          Path to Kubernetes configuration file placed on Cloudify Manager VM

      file_content:
        description: ''
        required: false
        description: >
          Content (YAML) of Kubernetes configuration file

      api_options:
        type: cloudify.kubernetes.types.ApiOptions
        required: false
        description: >
          Set of basic properties describing Kubernetes API access

  cloudify.kubernetes.types.AuthenticationVariant:
    description: >
      Type representing all authentication variants
      for different Kubernetes cloud providers.
      Each property represents separate supported variant of authentication.
      You should choose one variant and fill in only on property.
    properties:
      gcp_service_account:
        type: string
        required: false
        description: >
          (JSON) Content of Google Cloud Platform Service Accout file

  cloudify.kubernetes.types.ApiMappingEntry:
    description: >
      Type defining python Kubernetes API objects and methods definitions for particular operation
    properties:
      api:
        type: string
        description: >
          Name of python Kubernetes API object which will be used to as request for particular operation type
        required: true
      method:
        type: string
        description: >
          Method name of python Kubernetes API object which will be used as request for particular operation type
        required: true
      payload:
        type: string
        description: >
          Name of python Kubernetes API object which will be used as request data for particular operation type
        required: false

  cloudify.kubernetes.types.ApiMapping:
    description: >
      Type containing python Kubernetes API objects and methods definitions for all supported operations
    properties:
      create:
        type: cloudify.kubernetes.types.ApiMappingEntry
        description: >
          Python Kubernetes API objects and methods definitions for create operation
      read:
        type: cloudify.kubernetes.types.ApiMappingEntry
        description: >
          Python Kubernetes API objects and methods definitions for read operation
      delete:
        type: cloudify.kubernetes.types.ApiMappingEntry
        description: >
          Python Kubernetes API objects and methods definitions for delete operation

  cloudify.kubernetes.types.ResourceDefinition:
    description: >
      Type defining single Kubernetes resource e.g. Pod, Sevice, ...
      It is some kind of wrapper for native Kubernetes YAML definition
    properties:
      apiVersion:
        type: string
        description: >
          Kubernetes API version as a string
        default: v1
      metadata:
        description: >
          Metadata section related to single Kubernetes resource
      spec:
        description: >
          Kuberneres resource object specification

  cloudify.kubernetes.types.StorageClassResourceDefinition:
    description: >
      Type defining single Kubernetes resource e.g. StorageClass
      It is some kind of wrapper for native Kubernetes YAML definition
    properties:
      apiVersion:
        type: string
        description: >
          Kubernetes API version as a string
        default: v1
      metadata:
        description: >
          Metadata section related to single Kubernetes resource
      parameters:
        required: false
        description: >
          Additional parameters for object creation
      provisioner:
        required: false
        description: >
          Class provisioner for object creation

node_types:
  cloudify.kubernetes.nodes.Master:
    derived_from: cloudify.nodes.Root
    properties:
      configuration:
        type: cloudify.kubernetes.types.ConfigurationVariant
        description: >
          Configuration properties of Kubernetes API. One of four configuration options can be used
          1. Kubernetes config file contained by blueprint archive
          2. Kubernetes config file previously uploaded into Cloudify Manager VM
          3. Content of Kubernetes config file (YAML)
          4. Kubernetes API set o properties
      authentication:
        type: cloudify.kubernetes.types.AuthenticationVariant
        required: false
        description: >
          Authentication properties of Kubernetes Cloud providers. Optional.
          Currently supported providers: Google Cloud Platform

  cloudify.kubernetes.resources.Main:
    derived_from: cloudify.nodes.Root
    properties:
      definition:
        type: cloudify.kubernetes.types.ResourceDefinition
        description: >
          Definition of resource object using native Kubernetes YAML spec
      options:
        description: >
          API options depending on API operations execution
        default:
          namespace: default
      _api_mapping:
        type: cloudify.kubernetes.types.ApiMapping
        description: >
          Python Kubernetes API objects and methods definitions used for given resource type
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: kubernetes.cloudify_kubernetes.tasks.resource_create
        delete:
          implementation: kubernetes.cloudify_kubernetes.tasks.resource_delete

  cloudify.kubernetes.resources.Pod:
    derived_from: cloudify.kubernetes.resources.Main
    properties:
      _api_mapping:
        default:
          create:
            api: CoreV1Api
            method: create_namespaced_pod
            payload: V1Pod
          read:
            api: CoreV1Api
            method: read_namespaced_pod
          delete:
            api: CoreV1Api
            method: delete_namespaced_pod
            payload: V1DeleteOptions

  cloudify.kubernetes.resources.ReplicaSet:
    derived_from: cloudify.kubernetes.resources.Main
    properties:
      _api_mapping:
        default:
          create:
            api: ExtensionsV1beta1Api
            method: create_namespaced_replica_set
            payload: V1beta1ReplicaSet
          read:
            api: ExtensionsV1beta1Api
            method: read_namespaced_replica_set
          delete:
            api: ExtensionsV1beta1Api
            method: delete_collection_namespaced_replica_set
            payload: V1DeleteOptions

  cloudify.kubernetes.resources.Service:
    derived_from: cloudify.kubernetes.resources.Main
    properties:
      _api_mapping:
        default:
          create:
            api: CoreV1Api
            method: create_namespaced_service
            payload: V1Service
          read:
            api: CoreV1Api
            method: read_namespaced_service
          delete:
            api: CoreV1Api
            method: delete_namespaced_service
            payload: V1DeleteOptions

  cloudify.kubernetes.resources.PersistentVolume:
    derived_from: cloudify.kubernetes.resources.Main
    properties:
      _api_mapping:
        default:
          create:
            api: CoreV1Api
            method: create_persistent_volume
            payload: V1PersistentVolume
          read:
            api: CoreV1Api
            method: read_persistent_volume
          delete:
            api: CoreV1Api
            method: delete_persistent_volume
            payload: V1DeleteOptions

  cloudify.kubernetes.resources.StorageClass:
    derived_from: cloudify.nodes.Root
    properties:
      definition:
        type: cloudify.kubernetes.types.StorageClassResourceDefinition
        description: >
          Definition of resource object using native Kubernetes YAML spec
      options:
        description: >
          API options depending on API operations execution
        default:
          namespace: default
      _api_mapping:
        default:
          create:
            api: StorageV1beta1Api
            method: create_storage_class
            payload: V1beta1StorageClass
          read:
            api: StorageV1beta1Api
            method: read_storage_class
          delete:
            api: StorageV1beta1Api
            method: delete_storage_class
            payload: V1DeleteOptions
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: kubernetes.cloudify_kubernetes.tasks.resource_create
        delete:
          implementation: kubernetes.cloudify_kubernetes.tasks.resource_delete

relationships:
  cloudify.kubernetes.relationships.managed_by_master:
    derived_from: cloudify.relationships.connected_to
