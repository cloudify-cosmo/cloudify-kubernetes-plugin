tosca_definitions_version: cloudify_dsl_1_3

description: >
  This runs a trivial deployment in kubernetes.
  Expects that you have first installed https://github.com/cloudify-examples/simple-kubernetes-blueprint/tree/4.0.1.
  Also install the wagon with the command: "cfy plugins upload PATH_TO_WAGON".

imports:
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-manager/4.1/resources/rest-service/cloudify/types/types.yaml
  - https://raw.githubusercontent.com/cloudify-incubator/cloudify-kubernetes-plugin/1.1.0/plugin.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-openstack-plugin/2.2.0/plugin.yaml

inputs:

  configuration_file_content:
    type: string

  spec_port:
    default: 8000

  target_port:
    default: 80

  container_port:
    default: 80

dsl_definitions:

  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }

node_templates:

  persistent_volume:
    type: cloudify.kubernetes.resources.PersistentVolume
    properties:
      definition:
        apiVersion: v1
        metadata:
          name: pv0003
        spec:
          capacity:
            storage: 5Gi
          accessModes:
            - ReadWriteOnce
          persistentVolumeReclaimPolicy: Recycle
          storageClassName: gold
          cinder:
            volumeID: { get_attribute: [openstack_volume, external_id] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: example_storage
      - type: cloudify.relationships.depends_on
        target: openstack_volume
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: kubernetes_master

  openstack_volume:
    type: cloudify.openstack.nodes.Volume
    properties:
      openstack_config: *openstack_config
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              size: 10

  example_storage:
    type: cloudify.kubernetes.resources.StorageClass
    properties:
      definition:
        apiVersion: storage.k8s.io/v1beta1
        metadata:
          name: gold
        provisioner: kubernetes.io/cinder
        parameters:
          type: fast
          availability: nova
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: kubernetes_master

  kubernetes_master:
    type: cloudify.kubernetes.nodes.Master
    properties:
      configuration:
        file_content: { get_input: configuration_file_content }
