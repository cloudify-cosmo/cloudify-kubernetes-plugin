tosca_definitions_version: cloudify_dsl_1_3

description: >
  This runs a trivial deployment in kubernetes.
  Expects that you have first installed https://github.com/cloudify-examples/simple-kubernetes-blueprint/tree/4.0.1.
  Also install the wagon with the command: "cfy plugins upload PATH_TO_WAGON".

imports:
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-manager/4.1/resources/rest-service/cloudify/types/types.yaml
  - https://raw.githubusercontent.com/cloudify-incubator/cloudify-kubernetes-plugin/1.1.0/plugin.yaml

inputs:

  configuration_file_content:
    type: string

  spec_port:
    default: 8000

  target_port:
    default: 80

  container_port:
    default: 80

node_templates:

  nginx_service:
    type: cloudify.kubernetes.resources.Service
    properties:
      definition:
        apiVersion: v1
        metadata:
          name: nginx-service
        spec:
          ports:
          - port: { get_input: spec_port }
            targetPort: { get_input: target_port }
            protocol: TCP
          selector:
            app: nginx
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: kubernetes_master
      - type: cloudify.relationships.depends_on
        target: nginx_pod

  nginx_pod:
    type: cloudify.kubernetes.resources.Pod
    properties:
      definition:
        apiVersion: v1
        metadata:
          name: nginx
        spec:
          containers:
          - name: nginx
            image: nginx:1.7.9
            ports:
            - containerPort: { get_input: container_port }
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: kubernetes_master

  kubernetes_master:
    type: cloudify.kubernetes.nodes.Master
    #properties:
    #  configuration:
    #    file_content: { get_input: configuration_file_content }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          # copy configuration to runtime properties
          implementation: scripts/configuration_copy.py
          executor: central_deployment_agent
          inputs:
            configuration:
              file_content: { get_input: configuration_file_content }
